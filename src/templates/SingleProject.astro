---
import Layout from "../layouts/Layout.astro";
import Button from "../components/Button.astro";
import { getImageUrl, wrapWithVercelImageOpt } from "../helpers";

export interface Props {
  title: string;
  data?: object;
}

const { title = "Single Product", data } = Astro.props;
const coverImage = getImageUrl(data.projectFields.coverImage, 1920);
const footerImage = getImageUrl(data.projectFields.footerImage, 1920);
---

<Layout title={title} logoWrapperClassName="py-2" data={data}>
  {coverImage && (
    <div
    class="w-full bg-cover bg-center aspect-[1.4_/_1] lg:aspect-video"
    style={`background-image: url(${coverImage.url})`}
    >
    </div>
  )}
  <div class="container shm-grid">
    <div
      class="col-start-2 col-end-16 mt-7 lg:mt-18 mb-7 lg:mb-36 flex flex-row justify-between items-center"
    >
      <h1 class="h2 lg:big-text lg:mr-8">{data.title}</h1>
      {
        data.projectFields.callToAction && (
          <Button href={data.projectFields.callToAction.url} target={data.projectFields.callToAction.target} hoverTheme="black" className="hidden lg:inline-block whitespace-nowrap flex-shrink-0">
            {data.projectFields.callToAction.title}
          </Button>
        )
      }
    </div>
  </div>
  <div class="container shm-grid">
    <div
      class="col-start-2 col-end-6 wide:col-start-3 wide:col-end-7 text-base lg:body-text"
    >
      {
        data.projectCredits.bylineGroup && data.projectCredits.bylineGroup.map((group) => {
          return (
            <p class="opacity-0 translate-y-4 transition-all duration-300" x-data="{ show: false }"
              :class="{ 'opacity-0': !show, 'translate-y-4': !show }"
              x-intersect.half.once="show = true">
              <span class="text-black uppercase">{group.bylineLabel}</span>
              <>
                <br />
                <span class="text-grey">{group.byline}</span>
              </>
            </p>
          );
        })
      }
    </div>
    <div
      class="max-md:mt-11 max-md:border-t-1 max-md:pt-11 col-start-7 col-end-16 opacity-0 translate-y-4 transition-all duration-300 user-content" 
      x-data="{ show: false }"
      :class="{ 'opacity-0': !show, 'translate-y-4': !show }"
      x-intersect.threshold.05.once="show = true"
      set:html={data.projectFields.content}
    />
  </div>
  {
    data.projectFields.callToAction && (
      <Button href={data.projectFields.callToAction.url} target={data.projectFields.callToAction.target} hoverTheme="black" className="lg:hidden my-8 mt-20">
        {data.projectFields.callToAction.title}
      </Button>
    )
  }
  {footerImage && (
    <div
      class="container bg-cover bg-center aspect-[2.2_/_1] mt-9 lg:mt-28"
      style={`background-image: url(${footerImage.url})`}
    />
  )}
</Layout>
