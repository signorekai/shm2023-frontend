---
import Layout from "../layouts/Layout.astro";
import Accordion from "../components/Accordion.astro";
import Footer from "../components/Footer.astro";
import { getImageUrl } from "../helpers";

export interface Props {
  title: string;
  data?: object;
}

const { title = "Single Product", data } = Astro.props;
---

<Layout title={title} logoFile="/img/logo-shop.svg" logoWrapperClassName="py-2" showCartButton={true}>
  <div class="logo-wrapper py-1" slot="logo">
    <a class="group relative block" href="/">
      <img
        src="/img/logo-shop.png"
        class="h-10 group-hover:opacity-0"
        alt="Home"
      />
      <img
        src="/img/logo-shop.gif"
        class="h-10 absolute top-0 left-0 opacity-0 group-hover:opacity-100"
        alt="Home"
      />
    </a>
  </div>
  <div class="container flex flex-col shm-grid lg:mt-60">
    <div class="col-span-5 order-2 lg:order-1 relative">
      <div class="product-container sticky top-4">
        <h1 class="h3 font-gt-pressura tracking-widest uppercase">
          {data.title}
        </h1>
        <div class="mt-5">
          <Fragment set:html={data.additionalProductFields.credits} />
        </div>
        <button
          data-item-id={data.additionalProductFields.snipcartProductId
            ? data.additionalProductFields.snipcartProductId
            : `${data.productId}-${data.slug}`}
          data-item-name={data.title}
          data-item-price={data.additionalProductFields.price}
          data-item-description={data.additionalProductFields.shortDescription}
          data-item-weight={data.additionalProductFields.weight}
          data-item-image={data.featuredImage.node.sourceUrl}
          class="button button--wide mt-14 mb-4 button--black snipcart-add-item"
          ><span>Add to Cart | ${data.additionalProductFields.price}</span></button
        >
        {
          data.additionalProductFields.additionalDetails.map(
            ({ tabTitle, tabContent }, index) => (
              <Accordion
                openByDefault={index === 0}
                buttonPosition="right"
                buttonClassName="text-xl"
                borderWidthClassName=""
                titleClassName="body-text uppercase text-left"
                titleContainerClassName="flex flex-row w-full justify-between"
                title={tabTitle}
              >
                <div
                  class="accordion-line h-[1px] w-auto mb-8 lg:mb-12 bg-black"
                  slot="top-border"
                />
                <div slot="bottom-border" />
                <div class="mt-10 text-black" set:html={tabContent} />
              </Accordion>
            )
          )
        }
      </div>
    </div>
    <div class="col-start-7 col-end-[17] order-1 lg:order-2">
      <img
        src={data.featuredImage.node.sourceUrl}
        class="w-full mb-6"
        style={`aspect-ratio: ${data.featuredImage.node.mediaDetails.width} / ${data.featuredImage.node.mediaDetails.height}`}
        alt=""
      />
      {
        data.additionalProductFields.images.map((image) => {
          const media = getImageUrl(image, 1100);
          return (
            <img
              src={media.url}
              x-data="{ show: false }"
              :class="{ 'opacity-0': !show, 'translate-y-4': !show }"
              x-intersect.half.once="show = true"
              class="w-full mb-6 opacity-0 translate-y-4 transition-all"
              style={`aspect-ratio: ${media.width} / ${media.height}`}
            />
          );
        })
      }
    </div>
  </div>
  <Footer className="mt-16 lg:mt-28" />
</Layout>
